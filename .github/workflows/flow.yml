on: [push, pull_request]

name: Continuous integration

jobs:
  build-latest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        rust: [stable]
        lua: [lua53]
        include:
        - os: ubuntu-latest
          os-prefix: linux
          ext: so
        - os: macOS-latest
          os-prefix: macos
          ext: dylib
    steps:
    - uses: actions/checkout@master
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}

    - name: Build ${{ matrix.os }} ${{ matrix.lua }} pkg-config
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends liblua5.3-dev

    - name: Build ${{ matrix.os }} ${{ matrix.lua }} pkg-config
      if: ${{ matrix.os == 'macOS-latest' }}
      run: |
        brew install lua@5.3
        export LDFLAGS="-L/usr/local/opt/lua@5.3/lib"
        export CPPFLAGS="-I/usr/local/opt/lua@5.3/include"
        export PKG_CONFIG_PATH="/usr/local/opt/lua@5.3/lib/pkgconfig"

    - name: Rust cache
      uses: Swatinem/rust-cache@v1

    - name: Build ${{ matrix.lua }} target
      run: cargo build --release --features "${{ matrix.lua }}"

    - name: Rename target ${{ matrix.os-prefix }}
      run: mv target/release/libwordninja_rs_lua.${{ matrix.ext }} wordninja_${{ matrix.os-prefix }}_${{ matrix.lua }}.so

    - name: Upload target
      uses: actions/upload-artifact@v2
      with:
        name: wordninja-${{ matrix.os-prefix }}-${{ matrix.lua }}
        path: wordninja_${{ matrix.os-prefix }}_${{ matrix.lua }}.so

  build-latest-win32:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        rust: [stable]
        lua: [lua53]
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32

    - uses: actions/checkout@master

    - name: Install Rust and Lua
      run: |
        pacman -S --noconfirm mingw-w64-i686-rust mingw-w64-i686-lua mingw-w64-i686-pkg-config

    - name: Rust cache
      uses: Swatinem/rust-cache@v1

    - name: Build windows
      run: cargo build --release --features ${{ matrix.lua }}

    - name: Rename target
      run: mv target/release/wordninja_rs_lua.dll wordninja_windows_32_${{ matrix.lua }}.dll

    - name: Upload windows target
      uses: actions/upload-artifact@v2
      with:
        name: wordninja-windows-32-${{ matrix.lua }}
        path: wordninja_windows_32_${{ matrix.lua }}.dll

  build-latest-win64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        rust: [stable]
        lua: [lua53]
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64

    - uses: actions/checkout@master

    - name: Install Rust and Lua
      run: |
        pacman -S --noconfirm mingw-w64-x86_64-rust mingw-w64-x86_64-lua mingw-w64-x86_64-pkg-config

    - name: Rust cache
      uses: Swatinem/rust-cache@v1

    - name: Build windows
      run: cargo build --release --features ${{ matrix.lua }}

    - name: Rename target
      run: mv target/release/wordninja_rs_lua.dll wordninja_windows_64_${{ matrix.lua }}.dll

    - name: Upload windows target
      uses: actions/upload-artifact@v2
      with:
        name: wordninja-windows-64-${{ matrix.lua }}
        path: wordninja_windows_64_${{ matrix.lua }}.dll

  release-latest:
    needs: [build-latest, build-latest-win32, build-latest-win64]
    name: release-latest
    runs-on: ubuntu-latest
    steps:
      - name: Download the artifacts to release
        uses: actions/download-artifact@v2
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ startsWith(github.ref, 'refs/heads') && 'latest' || null }}
          prerelease: ${{ startsWith(github.ref, 'refs/heads') }}
          title: ${{ startsWith(github.ref, 'refs/heads') && 'Latest' || null }}
          files: |
            wordninja-windows-32-lua53
            wordninja-windows-64-lua53
            wordninja-linux-lua53
            wordninja-macos-lua53
